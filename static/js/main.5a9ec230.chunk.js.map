{"version":3,"sources":["static/img/play.svg","static/img/check_blank.svg","static/img/check_full.svg","static/img/pause.svg","static/img/plus.svg","text.js","task.js","person.js","tag.js","addFriend.js","home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TextInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","keypress","e","onChange","target","value","key","console","log","done","text","react_default","a","createElement","ref","className","type","onKeyPress","Component","Task","active","started","complete","src","pause_icon","start_icon","alt","onClick","onStart","name","checked_icon","check_icon","onComplete","Person","Tag","AddFriend","onDone","SortableItem","SortableElement","_ref","SortableList","SortableContainer","_ref2","items","map","index","concat","Home","onSortEnd","_ref3","oldIndex","newIndex","setState","tasks","arrayMove","state","showing","current_tag","possible_tags","guesses","friends","latest_type","new_task","times","tags","order","aim_date","due_date","users","user","id","getTasks","getTags","processText","commitAndClear","commitTask","textChanged","start","addTask","show","sync","reorder","componentDidMount","_this2","my_tag","axios","get","params","tag","then","response","data","sort","b","find","x","reverse","_this3","slice","length","i","update","tsk","put","_this4","email","split","filter","v","startsWith","tgs","replace","toLowerCase","push","trim","est","hl","substring","est_low","est_high","task","_this5","post","res","all","findIndex","item","undefined","_id","$oid","strt","arguments","Date","getTime","payload","parseFloat","newText","_this6","_this7","getLatestTag","task_Task","tg","tag_Tag","addTagToCurrent","setCurrentTag","person_Person","setCurrentPerson","control","createTag","addFriend_AddFriend","addFriend","add_icon","height","text_TextInput","distance","App","HashRouter","Route","exact","path","render","home_Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5a9ec230.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.0c1ce2dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/check_blank.5e8e3bc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/check_full.07199ac9.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.586f15b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.4b3f33aa.svg\";","import React, { Component } from 'react';\n\nexport default class TextInput extends Component { \n  constructor(props) { \n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.keypress = this.keypress.bind(this);\n  } \n  handleChange(e){\n    this.props.onChange(e.target.value);\n  } \n  keypress(e){\n    if (e.key === 'Enter') {\n        console.log(\"Enter pressed\");\n        this.props.done();\n    }\n  }\n  render(){\n    const text = this.props.text;\n    return ( \n        <input ref=\"mainInput\" className=\"inputTask\" type=\"text\" onChange={this.handleChange}  value={text} onKeyPress={this.keypress}/>\n        );\n  } \n}\n\n","import React, { Component } from 'react';\nimport start_icon from \"./static/img/play.svg\"\nimport check_icon from \"./static/img/check_blank.svg\"\nimport checked_icon from \"./static/img/check_full.svg\"\nimport pause_icon from \"./static/img/pause.svg\"\n\nexport default class Task extends Component{\n  render(){\n    const active = this.props.started\n    const complete = this.props.done\n\n    return (\n        <div className=\"oneTask\">\n            <img className=\"leftButton\" src={((active) ? pause_icon : start_icon )} alt={active ? \"Pause\" : \"Start\"} onClick={this.props.onStart} />\n            {complete  ? (<span><s> {this.props.name} </s></span>) : (<span>{this.props.name}</span>)}\n            <img className=\"rightButton\" src={((complete) ? checked_icon : check_icon )} alt={complete ? \"Mark not done\" : \"Mark done\"} onClick={this.props.onComplete} />\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Person extends Component{\n  render(){\n    return (\n        <div className=\"oneTask\">\n            <span onClick={this.props.onClick}>{this.props.name}</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Tag extends Component{\n  render(){\n    return (\n        <div className=\"oneTask\">\n            <span onClick={this.props.onClick}>{this.props.name}</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class AddFriend extends Component{\n  render(){\n    return (\n        <div className=\"addFriend\">\n            <span onClick={this.props.onDone}>Not Ready</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react'\nimport TextInput from \"./text.js\"\nimport Task from \"./task.js\"\nimport Person from \"./person.js\"\nimport Tag from \"./tag.js\"\nimport AddFriend from \"./addFriend.js\"\nimport {SortableContainer, SortableElement, arrayMove} from 'react-sortable-hoc';\nimport axios from 'axios'\nimport start_icon from \"./static/img/play.svg\"\nimport add_icon from \"./static/img/plus.svg\"\n\nconst SortableItem = SortableElement(({value}) => <li>{value}</li>);\n\nconst SortableList = SortableContainer(({items}) => {\n  return (\n    <ul>\n      {items.map((value, index) => (\n        <SortableItem key={`item-${index}`} index={index} value={value} />\n      ))}\n    </ul>\n  );\n});\n\nexport default class Home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showing: \"tasks\", //tasks, tags, guess\n            current_tag: \"\",\n            possible_tags: [],\n            guesses: [],\n            tasks: [],\n            friends: [],\n            latest_type: \"tag\", //tag, user, date\n            new_task: {\n                name: \"\",\n                started: false,\n                times: [],\n                done: [],\n                tags: [\n                    {\n                        name: \"\",\n                        order: 0\n                    }\n                ],\n                aim_date: \"\",\n                due_date: \"\",\n                users: []\n            },\n            text: \"\",\n            user: {\n                name: \"Ilya\",\n                id: \"0\"\n            }\n        }\n        this.getTasks = this.getTasks.bind(this);\n        this.getTags = this.getTags.bind(this);\n        this.processText = this.processText.bind(this);\n        this.commitAndClear = this.commitAndClear.bind(this);\n        this.commitTask = this.commitTask.bind(this);\n        this.textChanged = this.textChanged.bind(this);\n        this.complete = this.complete.bind(this);\n        this.start = this.start.bind(this);\n        this.onSortEnd = this.onSortEnd.bind(this);\n        this.addTask = this.addTask.bind(this);\n        this.show = this.show.bind(this);\n        this.sync = this.sync.bind(this);\n        this.reorder = this.reorder.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n    show(type){\n        this.setState({showing: type});\n    }\n    componentDidMount(){\n        this.getTasks();\n        this.getTags();\n    }\n\n    sync(){\n        this.reorder();\n        this.getTasks();\n        this.getTags();\n    }\n\n    getTasks(){\n        const my_tag = this.state.current_tag;\n        axios.get('https://api.ibreznik.com/now', {params: {tag: my_tag}}).then(response => response.data)\n          .then((data) => {data.sort((a, b) => a.tags.find(x => x.name === my_tag).order - b.tags.find(x => x.name === my_tag).order).reverse();\n        this.setState({tasks: data});\n        });\n    }\n    componentWillUnmount(){\n      this.reorder();\n    }\n    reorder(){\n        const tasks = this.state.tasks.slice();\n        const length = tasks.length\n        for(var i = 0; i < length; i++){\n            tasks[i].tags.find(x => x.name === this.state.current_tag).order = length - i;\n            this.update(tasks[i]);\n        } \n    }\n    update(tsk){\n      axios.put('https://api.ibreznik.com/task', tsk)\n    }\n    getTags(){\n        axios.get('https://api.ibreznik.com/tags').then(response => (this.setState({possible_tags : response.data})))\n    }\n    addFriend(email){\n    }\n    processText(){\n        var text = this.state.text;\n        var tags = text.split(' ').filter(v=> v.startsWith('#'))\n        var tgs = [];\n        for(var i = 0; i<tags.length; i++){\n            text = text.replace(tags[i],\"\");\n            tags[i] = tags[i].replace(\"#\",\"\").toLowerCase();\n            tgs.push({name:tags[i], order:0});\n        }\n        tgs.push({name:\"\", order:0});\n        console.log(tgs);\n        text = text.trim();\n        this.setState({text: text});\n//        var newTsk = this.state.newTask;\n//        newTsk.tags = tags;\n//        this.setState({newTask: newTsk});\n        const est = text.split(' ').filter(v=> v.startsWith('~'))\n        if(est.length > 0){\n            text = text.replace(est[0],\"\");\n            const hl = est[0].substring(1).split('-');\n            if(hl.length === 2){\n                return ({\n                    \"text\":text,\n                    \"tags\":tgs,\n                    \"est_low\": hl[0],\n                    \"est_high\": hl[1]\n                })\n            } else if (hl.length === 1){\n                return ({\n                    \"text\":text,\n                    \"tags\":tgs,\n                    \"est_low\": hl[0]\n                })\n            }\n\n        }\n        return ({\n            \"text\":text,\n            \"tags\":tgs\n        })  \n    }\n    commitAndClear(task){\n        this.commitTask(task);\n        this.setState({text: \"\"});\n    }\n    commitTask(tsk){\n        console.log(tsk);\n        axios.post('https://api.ibreznik.com/task', tsk)\n            .then(res => {\n            var all = this.state.tasks;\n            const i = all.findIndex(item=>item._id === undefined);\n            all[i]._id = {$oid:res.data}\n            this.setState({tasks:all});\n            });\n    }\n    addTask(strt = false){\n        const times = strt ? [(new Date().getTime())] : []\n        const payload = this.processText();\n        var task = { \n            \"name\": payload.text,\n            \"tags\": payload.tags,\n            \"times\":times,\n            \"started\":strt,\n            \"done\":false\n        };\n        if(\"est_high\" in payload){\n            task[\"est_high\"] = parseFloat(payload.est_high);\n        }\n        if(\"est_low\" in payload){\n            task[\"est_low\"] = parseFloat(payload.est_low);\n        }\n        var all = this.state.tasks;\n        all.push(task);\n        this.setState({tasks:all});\n        this.commitAndClear(task);\n    }\n    textChanged(newText){\n        this.setState({text:newText});\n    }\n    createTag(tag){\n    }\n    setCurrentPerson(index){\n    }\n    setCurrentTag(tag){\n        this.setState({current_tag:tag}, () => {\n            this.getTasks(); this.setState({showing: \"tasks\"});\n        });\n        console.log(this.state.tasks);\n    }\n    addTagToCurrent(index){\n    }\n    complete(i){\n        var tasks = this.state.tasks.slice();\n        tasks[i].done = !tasks[i].done;\n        if(tasks[i].started){\n            tasks[i].started = !tasks[i].started;\n            tasks[i].times.push(new Date().getTime());\n        }   \n        this.setState({tasks:tasks});\n        this.update(tasks[i]);\n    }\n    start(i){\n        const tasks = this.state.tasks.slice();\n        tasks[i].started = !tasks[i].started;\n        tasks[i].times.push(new Date().getTime());\n        if(tasks[i].done){\n            tasks[i].done = false;\n        }   \n        this.setState({tasks:tasks});\n        this.update(tasks[i]);\n    }\n    getLatestTag(){\n    }\n    onSortEnd = ({oldIndex, newIndex}) => {\n        this.setState({\n            tasks: arrayMove(this.state.tasks, oldIndex, newIndex),\n        });\n    }\n\n    render(){\n        const showing = this.state.showing;\n        const latest_type = this.state.latest_type;\n        const tag = this.getLatestTag();\n        var show = \"\";\n        if(showing === \"tasks\"){\n            show = this.state.tasks.map((tsk, index) => \n                (<Task \n                    name={tsk.name} \n                    id={tsk._id} \n                    started={tsk.started} \n                    done={tsk.done} \n                    onStart={() => this.start(index)}\n                    onComplete={() => this.complete(index)}\n                />));\n        } else if(showing === \"guess\"){\n            show = this.state.possible_tags.map((tg, index) => \n                (<Tag \n                    name={tg} \n                    onClick={() => this.addTagToCurrent(index)}\n                />));\n        } else if(showing === \"tags\"){\n            console.log(this.state.possible_tags);\n            if(latest_type === \"tag\"){\n                show = this.state.possible_tags.map((tg, index) => \n                (<Tag \n                    name={tg} \n                    onClick={() => this.setCurrentTag(tg)}\n                />));\n            } else if (latest_type === \"user\"){\n                show = this.state.friends.map((tg, index) => \n                (<Person \n                    name={tg} \n                    onClick={() => this.setCurrentPerson(index)}\n                />));\n                \n            }\n        }\n\n        var control = \"\";\n        if(showing === \"guess\"){\n            if(latest_type === \"tag\" ){\n                control = (<div className=\"createNewTag\" onClick={() => this.createTag(tag)}>\"Create new tag \"+tag</div>)\n            } else if(latest_type === \"user\"){\n                control =(<AddFriend onDone={this.addFriend} />)\n            }\n        } else{\n            control = (<div className=\"controls\">\n                    <div className= \"rightControl\">Edit</div>\n                    <div className= \"leftControl\" onClick={this.sync} >Sync</div>\n                    <center>\n                {(showing === \"tasks\") ?\n                           (<div className= \"centerControl\" onClick={() => this.show(\"tags\")}> Switch to ...</div>) :\n                           (<div className= \"centerControl\" onClick={() => this.setCurrentTag(\"\")}> Show all</div>)\n                        }\n                    </center>\n                </div>)}\n        return(\n            <div className=\"main\">\n                <div className=\"top\">\n                    <img className=\"add\"\n                        src = {add_icon}\n                        alt = \"Add\"\n                        height = \"35\"\n                        onClick={() => this.addTask(false)}\n                    />\n                    <img className=\"addAndStart\"\n                        src = {start_icon}\n                        alt = \"Start\"\n                        height = \"35\"\n                        onClick={() => this.addTask(true)}\n                    />\n                    <center><TextInput \n                        text={this.state.text} \n                        done={this.addTask}\n                        onChange={this.textChanged}\n                    /></center>\n                </div>\n                {control}\n                <div className=\"body\">\n                    <SortableList items= {show} distance={ 2 } onSortEnd={this.onSortEnd} />\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport{Route, HashRouter} from \"react-router-dom\"\nimport Home from \"./home.js\"\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <HashRouter>\n        <Route exact path=\"/\" render={(props) => <Home />} />\n        </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}