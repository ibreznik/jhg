{"version":3,"sources":["static/img/play.svg","static/img/check_blank.svg","static/img/check_full.svg","static/img/pause.svg","static/img/error.svg","static/img/plus.svg","text.js","task.js","person.js","tag.js","addFriend.js","home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TextInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","keypress","e","onChange","target","value","key","console","log","done","text","react_default","a","createElement","ref","className","type","onKeyPress","Component","Task","active","started","complete","edit","src","delete_icon","alt","onClick","onDelete","taskSelected","name","checked_icon","check_icon","onComplete","shallow","tags","len","length","j","pause_icon","start_icon","onStart","Person","Tag","AddFriend","onDone","SortableItem","SortableElement","_ref","SortableList","SortableContainer","_ref2","items","map","index","concat","Home","onSortEnd","_ref3","oldIndex","newIndex","setState","tasks","arrayMove","state","showing","current_tag","possible_tags","guesses","editing","friends","latest_type","new_task","times","order","aim_date","due_date","raw","users","user","id","getTasks","getTags","processText","commitAndClear","commitTask","textChanged","start","delete_task","addTask","show","sync","reorder","componentDidMount","tomorrow","_this2","my_tag","axios","get","params","tag","then","response","data","sort","b","find","x","reverse","_this3","slice","i","update","tsk","put","_this4","email","n","now","Date","getFullYear","twoDigit","getMonth","getDate","setDate","split","filter","v","startsWith","tgs","replace","toLowerCase","today","push","trim","est","hl","substring","est_low","est_high","task","_this5","post","res","all","findIndex","item","undefined","_id","$oid","strt","arguments","getTime","payload","delays","parseFloat","newText","_this6","_this7","_this8","delete","_this9","getLatestTag","task_Task","tg","tag_Tag","addTagToCurrent","setCurrentTag","person_Person","setCurrentPerson","control","createTag","addFriend_AddFriend","addFriend","add_icon","height","text_TextInput","distance","App","HashRouter","Route","exact","path","render","home_Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4916234c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.0c1ce2dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/check_blank.5e8e3bc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/check_full.07199ac9.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.586f15b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.35a6ccb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.4b3f33aa.svg\";","import React, { Component } from 'react';\n\nexport default class TextInput extends Component { \n  constructor(props) { \n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.keypress = this.keypress.bind(this);\n  } \n  handleChange(e){\n    this.props.onChange(e.target.value);\n  } \n  keypress(e){\n    if (e.key === 'Enter') {\n        console.log(\"Enter pressed\");\n        this.props.done();\n    }\n  }\n  render(){\n    const text = this.props.text;\n    return ( \n        <input ref=\"mainInput\" className=\"inputTask\" type=\"text\" onChange={this.handleChange}  value={text} onKeyPress={this.keypress}/>\n        );\n  } \n}\n\n","import React, { Component } from 'react';\nimport start_icon from \"./static/img/play.svg\"\nimport check_icon from \"./static/img/check_blank.svg\"\nimport checked_icon from \"./static/img/check_full.svg\"\nimport pause_icon from \"./static/img/pause.svg\"\nimport delete_icon from \"./static/img/error.svg\"\n\nexport default class Task extends Component{\n  render(){\n    const active = this.props.started\n    const complete = this.props.done\n    if (this.props.edit){\n    return (\n        <div className=\"oneTask\">\n            <img className=\"leftButton\" src={delete_icon} alt={\"Delete\"} onClick={this.props.onDelete} />\n            {complete  ? (<span onClick={this.props.taskSelected}><s> {this.props.name} </s></span>) : (<span onClick={this.props.taskSelected}>{this.props.name}</span>)}\n            <img className=\"rightButton\" src={((complete) ? checked_icon : check_icon )} alt={complete ? \"Mark not done\" : \"Mark done\"} onClick={this.props.onComplete} />\n        </div>\n    );\n    }\n    var shallow = false;\n    const tags = this.props.tags;\n    const len = tags.length;\n        for(var j = 0; j < len; j++){\n            const t = tags[j];\n            if(t.name === \"shallow\"){\n                shallow = true;\n            }}\n    if(shallow){\n    return (\n        <div className=\"oneTask\">\n            <img className=\"leftButton\" src={((active) ? pause_icon : start_icon )} alt={active ? \"Pause\" : \"Start\"} onClick={this.props.onStart} />\n            {complete  ? (<span onClick={this.props.taskSelected}><s><i> {this.props.name} </i></s></span>) : (<span onClick={this.props.taskSelected}><i>{this.props.name}</i></span>)}\n            <img className=\"rightButton\" src={((complete) ? checked_icon : check_icon )} alt={complete ? \"Mark not done\" : \"Mark done\"} onClick={this.props.onComplete} />\n        </div>\n    );\n    }\n    return (\n        <div className=\"oneTask\">\n            <img className=\"leftButton\" src={((active) ? pause_icon : start_icon )} alt={active ? \"Pause\" : \"Start\"} onClick={this.props.onStart} />\n            {complete  ? (<span onClick={this.props.taskSelected}><s> {this.props.name} </s></span>) : (<span onClick={this.props.taskSelected}>{this.props.name}</span>)}\n            <img className=\"rightButton\" src={((complete) ? checked_icon : check_icon )} alt={complete ? \"Mark not done\" : \"Mark done\"} onClick={this.props.onComplete} />\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Person extends Component{\n  render(){\n    return (\n        <div className=\"oneTask\">\n            <span onClick={this.props.onClick}>{this.props.name}</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Tag extends Component{\n  render(){\n    return (\n        <div className=\"oneTask\">\n            <span onClick={this.props.onClick}>{this.props.name}</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class AddFriend extends Component{\n  render(){\n    return (\n        <div className=\"addFriend\">\n            <span onClick={this.props.onDone}>Not Ready</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react'\nimport TextInput from \"./text.js\"\nimport Task from \"./task.js\"\nimport Person from \"./person.js\"\nimport Tag from \"./tag.js\"\nimport AddFriend from \"./addFriend.js\"\nimport {SortableContainer, SortableElement, arrayMove} from 'react-sortable-hoc';\nimport axios from 'axios'\nimport start_icon from \"./static/img/play.svg\"\nimport add_icon from \"./static/img/plus.svg\"\n\nconst SortableItem = SortableElement(({value}) => <li>{value}</li>);\n\nconst SortableList = SortableContainer(({items}) => {\n  return (\n    <ul>\n      {items.map((value, index) => (\n        <SortableItem key={`item-${index}`} index={index} value={value} />\n      ))}\n    </ul>\n  );\n});\n\nexport default class Home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showing: \"tasks\", //tasks, tags, guess\n            current_tag: \"\",\n            possible_tags: [],\n            guesses: [],\n            editing: \"\",\n            edit: false,\n            tasks: [],\n            friends: [],\n            latest_type: \"tag\", //tag, user, date\n            new_task: {\n                name: \"\",\n                started: false,\n                times: [],\n                done: [],\n                tags: [\n                    {\n                        name: \"\",\n                        order: 0\n                    }\n                ],\n                aim_date: \"\",\n                due_date: \"\",\n                raw: \"\",\n                users: []\n            },\n            text: \"\",\n            user: {\n                name: \"Ilya\",\n                id: \"0\"\n            }\n        }\n        this.getTasks = this.getTasks.bind(this);\n        this.getTags = this.getTags.bind(this);\n        this.processText = this.processText.bind(this);\n        this.commitAndClear = this.commitAndClear.bind(this);\n        this.commitTask = this.commitTask.bind(this);\n        this.textChanged = this.textChanged.bind(this);\n        this.complete = this.complete.bind(this);\n        this.start = this.start.bind(this);\n        this.delete_task = this.delete_task.bind(this);\n        this.onSortEnd = this.onSortEnd.bind(this);\n        this.addTask = this.addTask.bind(this);\n        this.show = this.show.bind(this);\n        this.sync = this.sync.bind(this);\n        this.reorder = this.reorder.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.taskSelected = this.taskSelected.bind(this);\n        console.log(this.tomorrow())\n    }\n    show(type){\n        this.setState({showing: type});\n    }\n    componentDidMount(){\n        this.getTasks();\n        this.getTags();\n    }\n\n    sync(){\n        this.reorder();\n        this.getTasks();\n        this.getTags();\n    }\n\n    getTasks(){\n        const my_tag = this.state.current_tag;\n        axios.get('https://api.ibreznik.com/now', {params: {tag: my_tag}}).then(response => response.data)\n          .then((data) => {data.sort((a, b) => a.tags.find(x => x.name === my_tag).order - b.tags.find(x => x.name === my_tag).order).reverse();\n        this.setState({tasks: data});\n        });\n    }\n    componentWillUnmount(){\n      this.reorder();\n    }\n    reorder(){\n        const tasks = this.state.tasks.slice();\n        const length = tasks.length\n        for(var i = 0; i < length; i++){\n            tasks[i].tags.find(x => x.name === this.state.current_tag).order = length - i;\n            this.update(tasks[i]);\n        } \n    }\n    update(tsk){\n      axios.put('https://api.ibreznik.com/task', tsk)\n    }\n    getTags(){\n        axios.get('https://api.ibreznik.com/tags').then(response => (this.setState({possible_tags : response.data})))\n    }\n    addFriend(email){\n    }\n    twoDigit(n) { return (n < 10 ? '0' : '') + n; }\n    today() {\n        var now = new Date();\n        return '' + now.getFullYear() + this.twoDigit(now.getMonth() + 1) + this.twoDigit(now.getDate());\n    }\n    tomorrow() {\n        var now = new Date();\n        var tomorrow = new Date();\n        tomorrow.setDate(now.getDate()+1);\n        return '' + tomorrow.getFullYear() + this.twoDigit(tomorrow.getMonth() + 1) + this.twoDigit(tomorrow.getDate());\n    }\n    processText(){\n        var text = this.state.text;\n        var tags = text.split(' ').filter(v=> v.startsWith('#'))\n        var tgs = [];\n        for(var i = 0; i<tags.length; i++){\n            text = text.replace(tags[i],\"\");\n            tags[i] = tags[i].replace(\"#\",\"\").toLowerCase();\n            if(tags[i] === \"today\"){\n                tags[i] = this.today();\n            } else if(tags[i] === \"tomorrow\"){\n                tags[i] = this.tomorrow();\n            }\n            tgs.push({name:tags[i], order:0});\n        }\n        tgs.push({name:\"\", order:0});\n        console.log(tgs);\n        text = text.trim();\n        const raw = this.state.text;\n        this.setState({text: text});\n//        var newTsk = this.state.newTask;\n//        newTsk.tags = tags;\n//        this.setState({newTask: newTsk});\n        const est = text.split(' ').filter(v=> v.startsWith('~'))\n        if(est.length > 0){\n            text = text.replace(est[0],\"\");\n            const hl = est[0].substring(1).split('-');\n            if(hl.length === 2){\n                return ({\n                    \"text\":text,\n                    \"tags\":tgs,\n                    \"raw\": raw,\n                    \"est_low\": hl[0],\n                    \"est_high\": hl[1]\n                })\n            } else if (hl.length === 1){\n                return ({\n                    \"text\":text,\n                    \"tags\":tgs,\n                    \"raw\":raw,\n                    \"est_low\": hl[0]\n                })\n            }\n\n        }\n        return ({\n            \"text\":text,\n            \"tags\":tgs,\n            \"raw\":raw\n        })  \n    }\n    commitAndClear(task){\n        this.commitTask(task);\n        this.setState({text: \"\"});\n    }\n    commitTask(tsk){\n        console.log(tsk);\n        axios.post('https://api.ibreznik.com/task', tsk)\n            .then(res => {\n            var all = this.state.tasks;\n            const i = all.findIndex(item=>item._id === undefined);\n            all[i]._id = {$oid:res.data}\n            this.setState({tasks:all});\n            });\n    }\n    addTask(strt = false){\n        const times = strt ? [(new Date().getTime())] : []\n        const payload = this.processText();\n        var task = { \n            \"name\": payload.text,\n            \"tags\": payload.tags,\n            \"times\":times,\n            \"started\":strt,\n            \"done\":false,\n            \"delays\": 0,\n            \"raw\": payload.raw\n        };\n        if(\"est_high\" in payload){\n            task[\"est_high\"] = parseFloat(payload.est_high);\n        }\n        if(\"est_low\" in payload){\n            task[\"est_low\"] = parseFloat(payload.est_low);\n        }\n        var all = this.state.tasks;\n        all.push(task);\n        this.setState({tasks:all});\n        this.commitAndClear(task);\n    }\n    textChanged(newText){\n        this.setState({text:newText});\n    }\n    createTag(tag){\n    }\n    setCurrentPerson(index){\n    }\n    setCurrentTag(tag){\n        this.setState({current_tag:tag}, () => {\n            this.getTasks(); this.setState({showing: \"tasks\"});\n        });\n        console.log(this.state.tasks);\n    }\n    addTagToCurrent(index){\n    }\n    complete(i){\n        var tasks = this.state.tasks.slice();\n        tasks[i].done = !tasks[i].done;\n        if(tasks[i].started){\n            tasks[i].started = !tasks[i].started;\n            tasks[i].times.push(new Date().getTime());\n        }   \n        this.setState({tasks:tasks});\n        this.update(tasks[i]);\n        console.log(tasks[i]);\n        const len = tasks[i].tags.length;\n        for(var j = 0; j < len; j++){\n            const t = tasks[i].tags[j];\n            if(t.name === \"repeat\"){\n                this.setState({text: tasks[i].raw},() => {this.addTask()});\n            }}\n    }\n    start(i){\n        const tasks = this.state.tasks.slice();\n        tasks[i].started = !tasks[i].started;\n        tasks[i].times.push(new Date().getTime());\n        if(tasks[i].done){\n            tasks[i].done = false;\n        }   \n        this.setState({tasks:tasks});\n        this.update(tasks[i]);\n    }\n    delete_task(i){\n        const tasks = this.state.tasks.slice();\n        axios.delete('https://api.ibreznik.com/task', {params: {id: tasks[i][\"_id\"][\"$oid\"]}}).then(response => this.sync());    \n    }\n    taskSelected(i){\n        const tasks = this.state.tasks.slice();\n        this.setState({editing:tasks[i][\"_id\"][\"$oid\"]},this.setState({text:tasks[i][\"raw\"]}));\n    }\n    getLatestTag(){\n    }\n    onSortEnd = ({oldIndex, newIndex}) => {\n        this.setState({\n            tasks: arrayMove(this.state.tasks, oldIndex, newIndex),\n        });\n    }\n\n    render(){\n        const showing = this.state.showing;\n        const latest_type = this.state.latest_type;\n        const tag = this.getLatestTag();\n        const edit = this.state.edit;\n        var show = \"\";\n        if(showing === \"tasks\"){\n            show = this.state.tasks.map((tsk, index) => \n                (<Task \n                    name={tsk.name} \n                    id={tsk._id} \n                    started={tsk.started} \n                    done={tsk.done} \n                    tags={tsk.tags}\n                    onStart={() => this.start(index)}\n                    onDelete={() => this.delete_task(index)}\n                    taskSelected={() => this.taskSelected(index)}\n                    onComplete={() => this.complete(index)}\n                    edit={edit}\n                />));\n        } else if(showing === \"guess\"){\n            show = this.state.possible_tags.map((tg, index) => \n                (<Tag \n                    name={tg} \n                    onClick={() => this.addTagToCurrent(index)}\n                />));\n        } else if(showing === \"tags\"){\n            console.log(this.state.possible_tags);\n            if(latest_type === \"tag\"){\n                show = this.state.possible_tags.map((tg, index) => \n                (<Tag \n                    name={tg} \n                    onClick={() => this.setCurrentTag(tg)}\n                />));\n            } else if (latest_type === \"user\"){\n                show = this.state.friends.map((tg, index) => \n                (<Person \n                    name={tg} \n                    onClick={() => this.setCurrentPerson(index)}\n                />));\n                \n            }\n        }\n\n        var control = \"\";\n        if(showing === \"guess\"){\n            if(latest_type === \"tag\" ){\n                control = (<div className=\"createNewTag\" onClick={() => this.createTag(tag)}>\"Create new tag \"+tag</div>)\n            } else if(latest_type === \"user\"){\n                control =(<AddFriend onDone={this.addFriend} />)\n            }\n        } else{\n            control = (<div className=\"controls\">\n                    <div className= \"rightControl\" onClick={() => this.setState({edit: !this.state.edit})}>Edit</div>\n                    <div className= \"leftControl\" onClick={this.sync} >Sync</div>\n                    <center>\n                {(showing === \"tasks\") ?\n                           (<div className= \"centerControl\" onClick={() => this.show(\"tags\")}> Switch to ...</div>) :\n                           (<div className= \"centerControl\" onClick={() => this.setCurrentTag(\"\")}> Show all</div>)\n                        }\n                    </center>\n                </div>)}\n        return(\n            <div className=\"main\">\n                <div className=\"top\">\n                    <img className=\"add\"\n                        src = {add_icon}\n                        alt = \"Add\"\n                        height = \"35\"\n                        onClick={() => this.addTask(false)}\n                    />\n                    <img className=\"addAndStart\"\n                        src = {start_icon}\n                        alt = \"Start\"\n                        height = \"35\"\n                        onClick={() => this.addTask(true)}\n                    />\n                    <center><TextInput \n                        text={this.state.text} \n                        done={this.addTask}\n                        onChange={this.textChanged}\n                    /></center>\n                </div>\n                {control}\n                <div className=\"body\">\n                    <SortableList items= {show} distance={ 2 } onSortEnd={this.onSortEnd} />\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport{Route, HashRouter} from \"react-router-dom\"\nimport Home from \"./home.js\"\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <HashRouter>\n        <Route exact path=\"/\" render={(props) => <Home />} />\n        </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}