{"version":3,"sources":["static/img/play.svg","static/img/check_blank.svg","static/img/check_full.svg","static/img/pause.svg","static/img/plus.svg","text.js","task.js","person.js","tag.js","addFriend.js","home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TextInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","e","onChange","target","value","text","react_default","a","createElement","ref","className","type","Component","Task","active","started","complete","done","src","pause_icon","start_icon","alt","onClick","onStart","name","checked_icon","check_icon","onComplete","Person","Tag","AddFriend","onDone","SortableItem","SortableElement","_ref","SortableList","SortableContainer","_ref2","items","map","index","key","concat","Home","onSortEnd","_ref3","oldIndex","newIndex","setState","tasks","arrayMove","state","showing","current_tag","possible_tags","guesses","friends","latest_type","new_task","times","tags","aim_date","due_date","users","user","id","getTasks","getTags","processText","commitAndClear","commitTask","textChanged","start","addTask","show","componentDidMount","_this2","axios","get","params","tag","then","response","data","sort","b","block_order","reverse","tsk","put","_this3","email","split","filter","v","startsWith","i","length","replace","toLowerCase","trim","task","_this4","console","log","post","res","all","findIndex","item","undefined","_id","$oid","strt","arguments","Date","getTime","payload","push","newText","_this5","slice","update","_this6","getLatestTag","task_Task","tg","tag_Tag","addTagToCurrent","setCurrentTag","person_Person","setCurrentPerson","control","createTag","addFriend_AddFriend","addFriend","height","text_TextInput","add_icon","distance","App","HashRouter","Route","exact","path","render","home_Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8PCEnBC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFHA,4EAINU,GACXP,KAAKJ,MAAMY,SAASD,EAAEE,OAAOC,wCAG7B,IAAMC,EAAOX,KAAKJ,MAAMe,KACxB,OACIC,EAAAC,EAAAC,cAAA,SAAOC,IAAI,YAAYC,UAAU,YAAYC,KAAK,OAAOT,SAAUR,KAAKI,aAAeM,MAAOC,WAX/DO,iFCIlBC,mLAEjB,IAAMC,EAASpB,KAAKJ,MAAMyB,QACpBC,EAAWtB,KAAKJ,MAAM2B,KAE5B,OACIX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaQ,IAAOJ,EAAUK,IAAaC,IAAcC,IAAKP,EAAS,QAAU,QAASQ,QAAS5B,KAAKJ,MAAMiC,UAC5HP,EAAaV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,aAAKd,KAAKJ,MAAMkC,KAAhB,MAAsClB,EAAAC,EAAAC,cAAA,YAAOd,KAAKJ,MAAMkC,MAC5ElB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcQ,IAAOF,EAAYS,IAAeC,IAAcL,IAAKL,EAAW,gBAAkB,YAAaM,QAAS5B,KAAKJ,MAAMqC,qBAT1Hf,aCJbgB,mLAEjB,OACItB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,QAAMc,QAAS5B,KAAKJ,MAAMgC,SAAU5B,KAAKJ,MAAMkC,cAJvBZ,aCAfiB,mLAEjB,OACIvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,QAAMc,QAAS5B,KAAKJ,MAAMgC,SAAU5B,KAAKJ,MAAMkC,cAJ1BZ,aCAZkB,mLAEjB,OACIxB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,QAAMc,QAAS5B,KAAKJ,MAAMyC,QAA1B,qBAJ2BnB,uDCSjCoB,EAAeC,0BAAgB,SAAAC,GAAA,IAAE9B,EAAF8B,EAAE9B,MAAF,OAAaE,EAAAC,EAAAC,cAAA,UAAKJ,KAEjD+B,EAAeC,4BAAkB,SAAAC,GAAa,IAAXC,EAAWD,EAAXC,MACvC,OACEhC,EAAAC,EAAAC,cAAA,UACG8B,EAAMC,IAAI,SAACnC,EAAOoC,GAAR,OACTlC,EAAAC,EAAAC,cAACwB,EAAD,CAAcS,IAAG,QAAAC,OAAUF,GAASA,MAAOA,EAAOpC,MAAOA,SAM5CuC,cACjB,SAAAA,EAAYrD,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiD,IACdpD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmD,GAAA9C,KAAAH,KAAMJ,KAkJVsD,UAAY,SAAAC,GAA0B,IAAxBC,EAAwBD,EAAxBC,SAAUC,EAAcF,EAAdE,SACpBxD,EAAKyD,SAAS,CACVC,MAAOC,oBAAU3D,EAAK4D,MAAMF,MAAOH,EAAUC,MAnJjDxD,EAAK4D,MAAQ,CACTC,QAAS,QACTC,YAAa,GACbC,cAAe,GACfC,QAAS,GACTN,MAAO,GACPO,QAAS,GACTC,YAAa,MACbC,SAAU,CACNlC,KAAM,GACNT,SAAS,EACT4C,MAAO,GACP1C,KAAM,GACN2C,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,MAAO,IAEX1D,KAAM,GACN2D,KAAM,CACFxC,KAAM,OACNyC,GAAI,MAGZ1E,EAAK2E,SAAW3E,EAAK2E,SAASnE,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAK4E,QAAU5E,EAAK4E,QAAQpE,KAAbP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACfA,EAAK6E,YAAc7E,EAAK6E,YAAYrE,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAK8E,eAAiB9E,EAAK8E,eAAetE,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAK+E,WAAa/E,EAAK+E,WAAWvE,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAKgF,YAAchF,EAAKgF,YAAYxE,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAKyB,SAAWzB,EAAKyB,SAASjB,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKiF,MAAQjF,EAAKiF,MAAMzE,KAAXP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACbA,EAAKqD,UAAYrD,EAAKqD,UAAU7C,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjBA,EAAKkF,QAAUlF,EAAKkF,QAAQ1E,KAAbP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACfA,EAAKmF,KAAOnF,EAAKmF,KAAK3E,KAAVP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACZA,EAAKoF,kBAAoBpF,EAAKoF,kBAAkB5E,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KArCXA,oEAuCboB,GACDjB,KAAKsD,SAAS,CAACI,QAASzC,gDAGxBjB,KAAKwE,WACLxE,KAAKyE,6CAEC,IAAAS,EAAAlF,KACNmF,IAAMC,IAAI,+BAAgC,CAACC,OAAQ,CAACC,IAAKtF,KAAKyD,MAAME,eAAe4B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,OAC1GF,KAAK,SAACE,GAAUA,EAAKC,KAAK,SAAC7E,EAAG8E,GAAJ,OAAU9E,EAAE+E,YAAcD,EAAEC,cAAaC,UACtEX,EAAK5B,SAAS,CAACC,MAAOkC,qCAMnBK,GACLX,IAAMY,IAAI,gCAAiCD,qCAEpC,IAAAE,EAAAhG,KACLmF,IAAMC,IAAI,iCAAiCG,KAAK,SAAAC,GAAQ,OAAKQ,EAAK1C,SAAS,CAACM,cAAgB4B,EAASC,2CAE/FQ,0CAKN,IAFA,IAAItF,EAAOX,KAAKyD,MAAM9C,KAClBuD,EAAOvD,EAAKuF,MAAM,KAAKC,OAAO,SAAAC,GAAC,OAAGA,EAAEC,WAAW,OAC3CC,EAAI,EAAGA,EAAEpC,EAAKqC,OAAQD,IAC1B3F,EAAOA,EAAK6F,QAAQtC,EAAKoC,GAAG,IAC5BpC,EAAKoC,GAAKpC,EAAKoC,GAAGE,QAAQ,IAAI,IAAIC,cAOtC,OALA9F,EAAOA,EAAK+F,OACZ1G,KAAKsD,SAAS,CAAC3C,KAAMA,IAIb,CACJA,KAAOA,EACPuD,KAAOA,0CAGAyC,GACX3G,KAAK4E,WAAW+B,GAChB3G,KAAKsD,SAAS,CAAC3C,KAAM,wCAEdmF,GAAI,IAAAc,EAAA5G,KACX6G,QAAQC,IAAIhB,GACZX,IAAM4B,KAAK,gCAAiCjB,GACvCP,KAAK,SAAAyB,GACN,IAAIC,EAAML,EAAKnD,MAAMF,MACf+C,EAAIW,EAAIC,UAAU,SAAAC,GAAI,YAAeC,IAAbD,EAAKE,MACnCJ,EAAIX,GAAGe,IAAM,CAACC,KAAKN,EAAIvB,MACvBmB,EAAKtD,SAAS,CAACC,MAAM0D,wCAGR,IAAbM,EAAaC,UAAAjB,OAAA,QAAAa,IAAAI,UAAA,IAAAA,UAAA,GACXvD,EAAQsD,EAAO,EAAE,IAAIE,MAAOC,WAAc,GAC1CC,EAAU3H,KAAK0E,cACfiC,EAAO,CACT7E,KAAQ6F,EAAQhH,KAChBuD,KAAQyD,EAAQzD,KAChBD,MAAQA,EACR2B,YAAc,EACdvE,QAAUkG,EACVhG,MAAO,GAEP0F,EAAMjH,KAAKyD,MAAMF,MACrB0D,EAAIW,KAAKjB,GACT3G,KAAKsD,SAAS,CAACC,MAAM0D,IACrBjH,KAAK2E,eAAegC,uCAEZkB,GACR7H,KAAKsD,SAAS,CAAC3C,KAAKkH,sCAEdvC,6CAEOxC,0CAEHwC,GAAI,IAAAwC,EAAA9H,KACdA,KAAKsD,SAAS,CAACK,YAAY2B,GAAM,WAC7BwC,EAAKtD,WAAYsD,EAAKxE,SAAS,CAACI,QAAS,YAE7CmD,QAAQC,IAAI9G,KAAKyD,MAAMF,+CAEXT,qCAEPwD,GACL,IAAI/C,EAAQvD,KAAKyD,MAAMF,MAAMwE,QAC7BxE,EAAM+C,GAAG/E,MAAQgC,EAAM+C,GAAG/E,KACvBgC,EAAM+C,GAAGjF,UACRkC,EAAM+C,GAAGjF,SAAWkC,EAAM+C,GAAGjF,QAC7BkC,EAAM+C,GAAGrC,MAAM2D,MAAK,IAAIH,MAAOC,YAEnC1H,KAAKsD,SAAS,CAACC,MAAMA,IACrBvD,KAAKgI,OAAOzE,EAAM+C,kCAEhBA,GACF,IAAM/C,EAAQvD,KAAKyD,MAAMF,MAAMwE,QAC/BxE,EAAM+C,GAAGjF,SAAWkC,EAAM+C,GAAGjF,QAC7BkC,EAAM+C,GAAGrC,MAAM2D,MAAK,IAAIH,MAAOC,WAC5BnE,EAAM+C,GAAG/E,OACRgC,EAAM+C,GAAG/E,MAAO,GAEpBvB,KAAKsD,SAAS,CAACC,MAAMA,IACrBvD,KAAKgI,OAAOzE,EAAM+C,6EAUd,IAAA2B,EAAAjI,KACE0D,EAAU1D,KAAKyD,MAAMC,QACrBK,EAAc/D,KAAKyD,MAAMM,YACzBuB,EAAMtF,KAAKkI,eACblD,EAAO,GACI,UAAZtB,EACCsB,EAAOhF,KAAKyD,MAAMF,MAAMV,IAAI,SAACiD,EAAKhD,GAAN,OACvBlC,EAAAC,EAAAC,cAACqH,EAAD,CACGrG,KAAMgE,EAAIhE,KACVyC,GAAIuB,EAAIuB,IACRhG,QAASyE,EAAIzE,QACbE,KAAMuE,EAAIvE,KACVM,QAAS,kBAAMoG,EAAKnD,MAAMhC,IAC1Bb,WAAY,kBAAMgG,EAAK3G,SAASwB,QAEtB,UAAZY,EACNsB,EAAOhF,KAAKyD,MAAMG,cAAcf,IAAI,SAACuF,EAAItF,GAAL,OAC/BlC,EAAAC,EAAAC,cAACuH,EAAD,CACGvG,KAAMsG,EACNxG,QAAS,kBAAMqG,EAAKK,gBAAgBxF,QAE1B,SAAZY,IACNmD,QAAQC,IAAI9G,KAAKyD,MAAMG,eACJ,QAAhBG,EACCiB,EAAOhF,KAAKyD,MAAMG,cAAcf,IAAI,SAACuF,EAAItF,GAAL,OACnClC,EAAAC,EAAAC,cAACuH,EAAD,CACGvG,KAAMsG,EACNxG,QAAS,kBAAMqG,EAAKM,cAAcH,QAEf,SAAhBrE,IACPiB,EAAOhF,KAAKyD,MAAMK,QAAQjB,IAAI,SAACuF,EAAItF,GAAL,OAC7BlC,EAAAC,EAAAC,cAAC0H,EAAD,CACG1G,KAAMsG,EACNxG,QAAS,kBAAMqG,EAAKQ,iBAAiB3F,UAMjD,IAAI4F,EAAU,GAkBd,MAjBe,UAAZhF,EACoB,QAAhBK,EACC2E,EAAW9H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeY,QAAS,kBAAMqG,EAAKU,UAAUrD,KAA5D,yBACW,SAAhBvB,IACN2E,EAAU9H,EAAAC,EAAAC,cAAC8H,EAAD,CAAWvG,OAAQrC,KAAK6I,aAGtCH,EAAW9H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAClBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,gBAAhB,QACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,cAAcY,QAAS5B,KAAKiF,mBAA5C,QACArE,EAAAC,EAAAC,cAAA,cACU,UAAZ4C,EACU9C,EAAAC,EAAAC,cAAA,OAAKE,UAAW,gBAAgBY,QAAS,kBAAMqG,EAAKjD,KAAK,UAAzD,kBACApE,EAAAC,EAAAC,cAAA,OAAKE,UAAW,gBAAgBY,QAAS,kBAAMqG,EAAKM,cAAc,MAAlE,eAKhB3H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXQ,IAAOE,IACPC,IAAM,QACNmH,OAAS,KACTlH,QAAS,kBAAMqG,EAAKlD,SAAQ,MAEhCnE,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAACiI,EAAD,CACJpI,KAAMX,KAAKyD,MAAM9C,KACjBH,SAAUR,KAAK6E,eAEnBjE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,MACXQ,IAAOwH,IACPrH,IAAM,MACNmH,OAAS,KACTlH,QAAS,kBAAMqG,EAAKlD,SAAQ,OAGnC2D,EACD9H,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAC2B,EAAD,CAAcG,MAAQoC,EAAMiE,SAAW,EAAI/F,UAAWlD,KAAKkD,qBAzO7ChC,aCRnBgI,0LARX,OACItI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,KACAvI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAC3J,GAAD,OAAWgB,EAAAC,EAAAC,cAAC0I,EAAD,iBAJ/BtI,cCOZuI,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTzE,KAAK,SAAA8E,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9G,QACfyG,UAAUC,cAAcO,YAI1B7D,QAAQC,IACN,gHAKEmD,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBxD,QAAQC,IAAI,sCAGRmD,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,UAO5BQ,MAAM,SAAAC,GACLjE,QAAQiE,MAAM,4CAA6CA,KC1FjEC,IAASxB,OAAO3I,EAAAC,EAAAC,cAACkK,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBjB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,OAAwBzB,OAAOC,SAASyB,MACpDC,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAAhH,OAAMoI,OAAN,sBAEP3B,GAgEV,SAAiCO,EAAOC,GAEtCuB,MAAMxB,GACHzE,KAAK,SAAAC,GAEJ,IAAMiG,EAAcjG,EAASkG,QAAQtG,IAAI,gBAEnB,MAApBI,EAASmG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C1B,UAAUC,cAAc0B,MAAMtG,KAAK,SAAA8E,GACjCA,EAAayB,aAAavG,KAAK,WAC7BoE,OAAOC,SAASmC,aAKpBhC,EAAgBC,EAAOC,KAG1BY,MAAM,WACLhE,QAAQC,IACN,mEArFAkF,CAAwBhC,EAAOC,GAI/BC,UAAUC,cAAc0B,MAAMtG,KAAK,WACjCsB,QAAQC,IACN,+GAMJiD,EAAgBC,EAAOC,MCvC/BE","file":"static/js/main.8c888766.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.0c1ce2dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/check_blank.5e8e3bc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/check_full.07199ac9.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.586f15b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.4b3f33aa.svg\";","import React, { Component } from 'react';\n\nexport default class TextInput extends Component { \n  constructor(props) { \n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  } \n  handleChange(e){\n    this.props.onChange(e.target.value);\n  } \n  render(){\n    const text = this.props.text;\n    return ( \n        <input ref=\"mainInput\" className=\"inputTask\" type=\"text\" onChange={this.handleChange}  value={text} />\n        );\n  } \n}\n\n","import React, { Component } from 'react';\nimport start_icon from \"./static/img/play.svg\"\nimport check_icon from \"./static/img/check_blank.svg\"\nimport checked_icon from \"./static/img/check_full.svg\"\nimport pause_icon from \"./static/img/pause.svg\"\n\nexport default class Task extends Component{\n  render(){\n    const active = this.props.started\n    const complete = this.props.done\n\n    return (\n        <div className=\"oneTask\">\n            <img className=\"leftButton\" src={((active) ? pause_icon : start_icon )} alt={active ? \"Pause\" : \"Start\"} onClick={this.props.onStart} />\n            {complete  ? (<span><s> {this.props.name} </s></span>) : (<span>{this.props.name}</span>)}\n            <img className=\"rightButton\" src={((complete) ? checked_icon : check_icon )} alt={complete ? \"Mark not done\" : \"Mark done\"} onClick={this.props.onComplete} />\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Person extends Component{\n  render(){\n    return (\n        <div className=\"oneTask\">\n            <span onClick={this.props.onClick}>{this.props.name}</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Tag extends Component{\n  render(){\n    return (\n        <div className=\"oneTask\">\n            <span onClick={this.props.onClick}>{this.props.name}</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class AddFriend extends Component{\n  render(){\n    return (\n        <div className=\"addFriend\">\n            <span onClick={this.props.onDone}>Not Ready</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react'\nimport TextInput from \"./text.js\"\nimport Task from \"./task.js\"\nimport Person from \"./person.js\"\nimport Tag from \"./tag.js\"\nimport AddFriend from \"./addFriend.js\"\nimport {SortableContainer, SortableElement, arrayMove} from 'react-sortable-hoc';\nimport axios from 'axios'\nimport start_icon from \"./static/img/play.svg\"\nimport add_icon from \"./static/img/plus.svg\"\n\nconst SortableItem = SortableElement(({value}) => <li>{value}</li>);\n\nconst SortableList = SortableContainer(({items}) => {\n  return (\n    <ul>\n      {items.map((value, index) => (\n        <SortableItem key={`item-${index}`} index={index} value={value} />\n      ))}\n    </ul>\n  );\n});\n\nexport default class Home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showing: \"tasks\", //tasks, tags, guess\n            current_tag: \"\",\n            possible_tags: [],\n            guesses: [],\n            tasks: [],\n            friends: [],\n            latest_type: \"tag\", //tag, user, date\n            new_task: {\n                name: \"\",\n                started: false,\n                times: [],\n                done: [],\n                tags: [],\n                aim_date: \"\",\n                due_date: \"\",\n                users: []\n            },\n            text: \"\",\n            user: {\n                name: \"Ilya\",\n                id: \"0\"\n            }\n        }\n        this.getTasks = this.getTasks.bind(this);\n        this.getTags = this.getTags.bind(this);\n        this.processText = this.processText.bind(this);\n        this.commitAndClear = this.commitAndClear.bind(this);\n        this.commitTask = this.commitTask.bind(this);\n        this.textChanged = this.textChanged.bind(this);\n        this.complete = this.complete.bind(this);\n        this.start = this.start.bind(this);\n        this.onSortEnd = this.onSortEnd.bind(this);\n        this.addTask = this.addTask.bind(this);\n        this.show = this.show.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n    show(type){\n        this.setState({showing: type});\n    }\n    componentDidMount(){\n        this.getTasks();\n        this.getTags();\n    }\n    getTasks(){\n        axios.get('https://api.ibreznik.com/now', {params: {tag: this.state.current_tag}}).then(response => response.data)\n          .then((data) => {data.sort((a, b) => a.block_order - b.block_order).reverse();\n        this.setState({tasks: data});\n        });\n    }\n // componentWillUnmount(){\n //   this.reorder();\n // }\n    update(tsk){\n      axios.put('https://api.ibreznik.com/task', tsk)\n    }\n    getTags(){\n        axios.get('https://api.ibreznik.com/tags').then(response => (this.setState({possible_tags : response.data})))\n    }\n    addFriend(email){\n    }\n    processText(){\n        var text = this.state.text;\n        var tags = text.split(' ').filter(v=> v.startsWith('#'))\n        for(var i = 0; i<tags.length; i++){\n            text = text.replace(tags[i],\"\");\n            tags[i] = tags[i].replace(\"#\",\"\").toLowerCase();\n        }\n        text = text.trim();\n        this.setState({text: text});\n//        var newTsk = this.state.newTask;\n//        newTsk.tags = tags;\n//        this.setState({newTask: newTsk});\n        return ({\n            \"text\":text,\n            \"tags\":tags\n        })  \n    }\n    commitAndClear(task){\n        this.commitTask(task);\n        this.setState({text: \"\"});\n    }\n    commitTask(tsk){\n        console.log(tsk);\n        axios.post('https://api.ibreznik.com/task', tsk)\n            .then(res => {\n            var all = this.state.tasks;\n            const i = all.findIndex(item=>item._id === undefined);\n            all[i]._id = {$oid:res.data}\n            this.setState({tasks:all});\n            });\n    }\n    addTask(strt = false){\n        const times = strt ? [(new Date().getTime())] : []\n        const payload = this.processText();\n        const task = { \n            \"name\": payload.text,\n            \"tags\": payload.tags,\n            \"times\":times,\n            \"block_order\":0,\n            \"started\":strt,\n            \"done\":false\n        };\n        var all = this.state.tasks;\n        all.push(task);\n        this.setState({tasks:all});\n        this.commitAndClear(task);\n    }\n    textChanged(newText){\n        this.setState({text:newText});\n    }\n    createTag(tag){\n    }\n    setCurrentPerson(index){\n    }\n    setCurrentTag(tag){\n        this.setState({current_tag:tag}, () => {\n            this.getTasks(); this.setState({showing: \"tasks\"});\n        });\n        console.log(this.state.tasks);\n    }\n    addTagToCurrent(index){\n    }\n    complete(i){\n        var tasks = this.state.tasks.slice();\n        tasks[i].done = !tasks[i].done;\n        if(tasks[i].started){\n            tasks[i].started = !tasks[i].started;\n            tasks[i].times.push(new Date().getTime());\n        }   \n        this.setState({tasks:tasks});\n        this.update(tasks[i]);\n    }\n    start(i){\n        const tasks = this.state.tasks.slice();\n        tasks[i].started = !tasks[i].started;\n        tasks[i].times.push(new Date().getTime());\n        if(tasks[i].done){\n            tasks[i].done = false;\n        }   \n        this.setState({tasks:tasks});\n        this.update(tasks[i]);\n    }\n    getLatestTag(){\n    }\n    onSortEnd = ({oldIndex, newIndex}) => {\n        this.setState({\n            tasks: arrayMove(this.state.tasks, oldIndex, newIndex),\n        });\n    }\n\n    render(){\n        const showing = this.state.showing;\n        const latest_type = this.state.latest_type;\n        const tag = this.getLatestTag();\n        var show = \"\";\n        if(showing === \"tasks\"){\n            show = this.state.tasks.map((tsk, index) => \n                (<Task \n                    name={tsk.name} \n                    id={tsk._id} \n                    started={tsk.started} \n                    done={tsk.done} \n                    onStart={() => this.start(index)}\n                    onComplete={() => this.complete(index)}\n                />));\n        } else if(showing === \"guess\"){\n            show = this.state.possible_tags.map((tg, index) => \n                (<Tag \n                    name={tg} \n                    onClick={() => this.addTagToCurrent(index)}\n                />));\n        } else if(showing === \"tags\"){\n            console.log(this.state.possible_tags);\n            if(latest_type === \"tag\"){\n                show = this.state.possible_tags.map((tg, index) => \n                (<Tag \n                    name={tg} \n                    onClick={() => this.setCurrentTag(tg)}\n                />));\n            } else if (latest_type === \"user\"){\n                show = this.state.friends.map((tg, index) => \n                (<Person \n                    name={tg} \n                    onClick={() => this.setCurrentPerson(index)}\n                />));\n                \n            }\n        }\n\n        var control = \"\";\n        if(showing === \"guess\"){\n            if(latest_type === \"tag\" ){\n                control = (<div className=\"createNewTag\" onClick={() => this.createTag(tag)}>\"Create new tag \"+tag</div>)\n            } else if(latest_type === \"user\"){\n                control =(<AddFriend onDone={this.addFriend} />)\n            }\n        } else{\n            control = (<div className=\"controls\">\n                    <div className= \"rightControl\">Edit</div>\n                    <div className= \"leftControl\" onClick={this.componentDidMount} >Sync</div>\n                    <center>\n                {(showing === \"tasks\") ?\n                           (<div className= \"centerControl\" onClick={() => this.show(\"tags\")}> Switch to ...</div>) :\n                           (<div className= \"centerControl\" onClick={() => this.setCurrentTag(\"\")}> Show all</div>)\n                        }\n                    </center>\n                </div>)}\n        return(\n            <div className=\"main\">\n                <div className=\"top\">\n                    <img className=\"addAndStart\"\n                        src = {start_icon}\n                        alt = \"Start\"\n                        height = \"35\"\n                        onClick={() => this.addTask(true)}\n                    />\n                    <center><TextInput \n                        text={this.state.text} \n                        onChange={this.textChanged}\n                    /></center>\n                    <img className=\"add\"\n                        src = {add_icon}\n                        alt = \"Add\"\n                        height = \"35\"\n                        onClick={() => this.addTask(false)}\n                    />\n                </div>\n                {control}\n                <div className=\"body\">\n                    <SortableList items= {show} distance={ 2 } onSortEnd={this.onSortEnd} />\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport{Route, HashRouter} from \"react-router-dom\"\nimport Home from \"./home.js\"\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <HashRouter>\n        <Route exact path=\"/\" render={(props) => <Home />} />\n        </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}