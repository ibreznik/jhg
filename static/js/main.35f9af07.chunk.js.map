{"version":3,"sources":["static/img/play.svg","static/img/check_blank.svg","static/img/check_full.svg","static/img/pause.svg","static/img/error.svg","static/img/later.svg","static/img/link.svg","static/img/phone.svg","static/img/plus.svg","text.js","task.js","person.js","tag.js","addFriend.js","home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TextInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","keypress","e","onChange","target","value","key","console","log","done","text","react_default","a","createElement","ref","className","type","onKeyPress","Component","Task","navigate","window","orientation","navigator","userAgent","indexOf","url","open","onStart","_this2","active","started","complete","edit","link_icon","web_icon","shallow","deep","link","link_url","tags","len","length","j","t","name","startsWith","substring","isMobileDevice","phone_icon","desc","src","delete_icon","pause_icon","start_icon","alt","onClick","onDelete","taskSelected","postpone_icon","checked_icon","check_icon","onPostpone","onComplete","Person","Tag","AddFriend","onDone","SortableItem","SortableElement","_ref","SortableList","SortableContainer","_ref2","items","map","index","concat","Home","onSortEnd","_ref3","oldIndex","newIndex","setState","tasks","arrayMove","state","reorder","showing","current_tag","today","possible_tags","guesses","editing","friends","latest_type","new_task","times","order","aim_date","due_date","raw","users","user","id","getTasks","getTags","processText","commitAndClear","commitTask","textChanged","postpone","start","delete_task","addTask","show","sync","componentDidMount","splice","my_tag","axios","get","params","tag","then","response","data","sort","b","find","x","reverse","_this3","slice","i","update","tsk","put","_this4","res","email","n","now","Date","getFullYear","twoDigit","getMonth","getDate","tomorrow","setDate","day","d","getDay","tg","weekday","workday","prepday","alternate","replace","split","filter","v","tgs","toLowerCase","replaceTag","push","trim","est","hl","est_low","est_high","task","_this5","post","all","findIndex","item","undefined","_id","$oid","strt","arguments","getTime","payload","delays","parseFloat","newText","_this6","_this7","reschedule","remove_tag","new_tag","alert","tmp","today_task","_this8","delete","_this9","getLatestTag","low","high","all_times","flip","total_spent","tm","Math","max","tag_display","toFixed","task_Task","tag_Tag","addTagToCurrent","setCurrentTag","person_Person","setCurrentPerson","control","createTag","addFriend_AddFriend","addFriend","add_icon","height","text_TextInput","distance","App","HashRouter","Route","exact","path","render","home_Home","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.35f9af07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.0c1ce2dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/check_blank.5e8e3bc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/check_full.07199ac9.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.586f15b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.35a6ccb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/later.491fe89f.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.4c93145f.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.d65f03f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.4b3f33aa.svg\";","import React, { Component } from 'react';\n\nexport default class TextInput extends Component { \n  constructor(props) { \n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.keypress = this.keypress.bind(this);\n  } \n  handleChange(e){\n    this.props.onChange(e.target.value);\n  } \n  keypress(e){\n    if (e.key === 'Enter') {\n        console.log(\"Enter pressed\");\n        this.props.done();\n    }\n  }\n  render(){\n    const text = this.props.text;\n    return ( \n        <input ref=\"mainInput\" className=\"inputTask\" type=\"text\" onChange={this.handleChange}  value={text} onKeyPress={this.keypress}/>\n        );\n  } \n}\n\n","import React, { Component } from 'react';\nimport start_icon from \"./static/img/play.svg\"\nimport check_icon from \"./static/img/check_blank.svg\"\nimport checked_icon from \"./static/img/check_full.svg\"\nimport pause_icon from \"./static/img/pause.svg\"\nimport delete_icon from \"./static/img/error.svg\"\nimport postpone_icon from \"./static/img/later.svg\"\nimport web_icon from \"./static/img/link.svg\"\nimport phone_icon from \"./static/img/phone.svg\"\n\nexport default class Task extends Component{\n  constructor(props){\n    super(props);\n    this.navigate = this.navigate.bind(this);\n  }\n  isMobileDevice() {\n    return (typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1);\n  }\n  navigate(url){\n    window.open(url,'_blank');\n    this.props.onStart();\n  }\n  render(){\n    const active = this.props.started;\n    const complete = this.props.done;\n    const edit = this.props.edit;\n    var link_icon = web_icon;\n    var shallow = false;\n    var deep = false;\n    var link = false;\n    var link_url = \"\";\n    const tags = this.props.tags;\n    const len = tags.length;\n        for(var j = 0; j < len; j++){\n            const t = tags[j];\n            if(t.name === \"shallow\"){\n                shallow = true;\n            }\n            if(t.name === \"deep\"){\n                deep = true;\n            }\n            if(t.name.startsWith(\"link_\")){\n                if(t.name.substring(5).startsWith(\"tel\")){\n                    if(this.isMobileDevice()){\n                        link = true;\n                        link_url = t.name.substring(5);\n                        link_icon = phone_icon;\n                    }\n                } else{\n                    link = true;\n                    link_url = t.name.substring(5);\n                }\n            }\n        }\n      let desc = this.props.name;\n      \n      if(complete){\n        desc=<s>{desc}</s>\n      }\n      if(shallow){\n        desc=<i>{desc}</i>\n      }\n      if(deep){\n        desc=<b>{desc}</b>\n      }\n\n    return (\n        <div className=\"oneTask\">\n        <img className=\"leftButton\" \n            src={((edit) ? delete_icon : (active ? pause_icon: (link ? link_icon : start_icon)))} \n            alt={((edit) ? \"Delete\" : ((active) ? \"Pause\" : \"Start\"))}\n            onClick={edit ? this.props.onDelete : ((link && !active) ? () => this.navigate(link_url) : this.props.onStart)}\n        />\n        <span onClick={this.props.taskSelected}>\n        {desc}\n        </span>\n        <img className=\"rightButton\" \n        src={(edit ? postpone_icon : (complete ? checked_icon : check_icon))} \n        alt={(edit ? \"Postpone\" : (complete ? \"Uncomplete\" : \"Complete\"))}\n        onClick={edit ? this.props.onPostpone : this.props.onComplete} \n        />\n        </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Person extends Component{\n  render(){\n    return (\n        <div className=\"oneTask\">\n            <span onClick={this.props.onClick}>{this.props.name}</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class Tag extends Component{\n  render(){\n    return (\n        <div className=\"oneTask\">\n            <span onClick={this.props.onClick}>{this.props.name}</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\n\nexport default class AddFriend extends Component{\n  render(){\n    return (\n        <div className=\"addFriend\">\n            <span onClick={this.props.onDone}>Not Ready</span>\n        </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react'\nimport TextInput from \"./text.js\"\nimport Task from \"./task.js\"\nimport Person from \"./person.js\"\nimport Tag from \"./tag.js\"\nimport AddFriend from \"./addFriend.js\"\nimport {SortableContainer, SortableElement, arrayMove} from 'react-sortable-hoc';\nimport axios from 'axios'\nimport start_icon from \"./static/img/play.svg\"\nimport add_icon from \"./static/img/plus.svg\"\n\nconst SortableItem = SortableElement(({value}) => <li>{value}</li>);\n\nconst SortableList = SortableContainer(({items}) => {\n  return (\n    <ul>\n      {items.map((value, index) => (\n        <SortableItem key={`item-${index}`} index={index} value={value} />\n      ))}\n    </ul>\n  );\n});\n\nexport default class Home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showing: \"tasks\", //tasks, tags, guess\n            current_tag: this.today(),\n            possible_tags: [],\n            guesses: [],\n            editing: \"\",\n            edit: false,\n            tasks: [],\n            friends: [],\n            key: \"\",\n            latest_type: \"tag\", //tag, user, date\n            new_task: {\n                name: \"\",\n                started: false,\n                times: [],\n                done: [],\n                tags: [\n                    {\n                        name: \"\",\n                        order: 0\n                    }\n                ],\n                aim_date: \"\",\n                due_date: \"\",\n                raw: \"\",\n                users: []\n            },\n            text: \"\",\n            user: {\n                name: \"Ilya\",\n                id: \"0\"\n            }\n        }\n        this.getTasks = this.getTasks.bind(this);\n        this.getTags = this.getTags.bind(this);\n        this.processText = this.processText.bind(this);\n        this.commitAndClear = this.commitAndClear.bind(this);\n        this.commitTask = this.commitTask.bind(this);\n        this.textChanged = this.textChanged.bind(this);\n        this.complete = this.complete.bind(this);\n        this.postpone = this.postpone.bind(this);\n        this.start = this.start.bind(this);\n        this.delete_task = this.delete_task.bind(this);\n        this.onSortEnd = this.onSortEnd.bind(this);\n        this.addTask = this.addTask.bind(this);\n        this.show = this.show.bind(this);\n        this.sync = this.sync.bind(this);\n        this.reorder = this.reorder.bind(this);\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.taskSelected = this.taskSelected.bind(this);\n    }\n    show(type){\n        if(type === \"tags\"){\n            var tags = this.state.possible_tags;\n            const len = tags.length;\n            for(var j = len-1; j >= 0; j--){\n                if(tags[j].startsWith(\"link_\") || tags[j].startsWith(\"default_\") || tags[j].startsWith(\"skill-\") || tags[j] === \"deep\" || tags[j] === \"shallow\"){\n                    tags.splice(j,1);\n                }\n            }\n            this.setState({possible_tags: tags, showing: type});\n        }else{\n            this.setState({showing: type});\n        }\n    }\n    componentDidMount(){\n        this.getTasks();\n        this.getTags();\n    }\n\n    sync(){\n        this.reorder();\n        this.getTasks();\n        this.getTags();\n    }\n\n    getTasks(){\n        const my_tag = this.state.current_tag;\n        axios.get('https://api.ibreznik.com/now', {params: {tag: my_tag, key:this.state.key}}).then(response => response.data)\n          .then((data) => {data.sort((a, b) => a.tags.find(x => x.name === my_tag).order - b.tags.find(x => x.name === my_tag).order).reverse();\n        this.setState({tasks: data});\n        });\n    }\n    componentWillUnmount(){\n      this.reorder();\n    }\n    reorder(){\n        const tasks = this.state.tasks.slice();\n        const length = tasks.length\n        for(var i = 0; i < length; i++){\n            tasks[i].tags.find(x => x.name === this.state.current_tag).order = length - i;\n            this.update(tasks[i]);\n        } \n    }\n    update(tsk){\n      this.setState({editing: \"\"});\n      axios.put('https://api.ibreznik.com/task', tsk)\n    }\n    getTags(){\n        axios.get('https://api.ibreznik.com/tags')\n            .then(response => (this.setState({possible_tags : response.data.sort()})))\n            .then(res => {\n            })\n    }\n    addFriend(email){\n    }\n    twoDigit(n) { return (n < 10 ? '0' : '') + n; }\n    today() {\n        var now = new Date();\n        return '' + now.getFullYear() + this.twoDigit(now.getMonth() + 1) + this.twoDigit(now.getDate());\n    }\n    tomorrow() {\n        var now = new Date();\n        var tomorrow = new Date();\n        tomorrow.setDate(now.getDate()+1);\n        return '' + tomorrow.getFullYear() + this.twoDigit(tomorrow.getMonth() + 1) + this.twoDigit(tomorrow.getDate());\n    }\n    weekday(day) {\n        var d = new Date();\n        d.setDate(d.getDate() + (7-d.getDay())%7+day);\n        return '' + d.getFullYear() + this.twoDigit(d.getMonth() + 1) + this.twoDigit(d.getDate());\n    }\n    alternate(){\n        var now = new Date();\n        var tomorrow = new Date();\n        tomorrow.setDate(now.getDate()+2);\n        return '' + tomorrow.getFullYear() + this.twoDigit(tomorrow.getMonth() + 1) + this.twoDigit(tomorrow.getDate());\n    }\n    workday(){\n        var d = new Date();\n        do {\n            d.setDate(d.getDate() + 1);\n        } while (!(d.getDay() % 6))\n        return '' + d.getFullYear() + this.twoDigit(d.getMonth() + 1) + this.twoDigit(d.getDate());\n    }\n    prepday(){\n        var d = new Date();\n        do {\n            d.setDate(d.getDate() + 1);\n        } while (d.getDay() != 6 && d.getDay() != 5)\n        return '' + d.getFullYear() + this.twoDigit(d.getMonth() + 1) + this.twoDigit(d.getDate());\n    }\n    replaceTag(tg){\n        if(tg === \"today\"){\n          return this.today();\n        } else if(tg === \"tomorrow\"){\n          return this.tomorrow();\n        } else if(tg === \"monday\"){\n          return this.weekday(1);\n        } else if(tg === \"tuesday\"){\n          return this.weekday(2);\n        } else if(tg === \"wednesday\"){\n          return this.weekday(3);\n        } else if(tg === \"thursday\"){\n          return this.weekday(4);\n        } else if(tg === \"friday\"){\n          return this.weekday(5);\n        } else if(tg === \"saturday\"){\n          return this.weekday(6);\n        } else if(tg === \"sunday\"){\n          return this.weekday(0);\n        } else if(tg === \"workday\"){\n          return this.workday();\n        } else if(tg === \"prepday\"){\n          return this.prepday();\n        } else if(tg === \"alternate\"){\n          return this.alternate();\n         }\n        return tg;\n    }\n    processText(){\n        var text = this.state.text;\n        text = text.replace('^',\"#link_\")\n        text = text.replace('*',\"#default_\")\n        var tags = text.split(' ').filter(v=> v.startsWith('#'))\n        var tgs = [];\n        for(var i = 0; i<tags.length; i++){\n            text = text.replace(tags[i],\"\");\n            tags[i] = tags[i].replace(\"#\",\"\").toLowerCase();\n            tags[i] = this.replaceTag(tags[i]);\n            tgs.push({name:tags[i], order:0});\n        }\n        tgs.push({name:\"\", order:0});\n        text = text.trim();\n        const raw = this.state.text;\n        this.setState({text: text});\n//        var newTsk = this.state.newTask;\n//        newTsk.tags = tags;\n//        this.setState({newTask: newTsk});\n        const est = text.split(' ').filter(v=> v.startsWith('~'))\n        if(est.length > 0){\n            text = text.replace(est[0],\"\");\n            const hl = est[0].substring(1).split('-');\n            if(hl.length === 2){\n                return ({\n                    \"text\":text,\n                    \"tags\":tgs,\n                    \"raw\": raw,\n                    \"est_low\": hl[0],\n                    \"est_high\": hl[1]\n                })\n            } else if (hl.length === 1){\n                return ({\n                    \"text\":text,\n                    \"tags\":tgs,\n                    \"raw\":raw,\n                    \"est_low\": hl[0]\n                })\n            }\n\n        }\n        return ({\n            \"text\":text,\n            \"tags\":tgs,\n            \"raw\":raw\n        })  \n    }\n    commitAndClear(task){\n        this.commitTask(task);\n        this.setState({text: \"\"});\n    }\n    commitTask(tsk){\n        axios.post('https://api.ibreznik.com/task', tsk)\n            .then(res => {\n            var all = this.state.tasks;\n            const i = all.findIndex(item=>item._id === undefined);\n            if(i>=0){\n                all[i]._id = {$oid:res.data}\n                this.setState({tasks:all});\n            }\n            });\n    }\n    addTask(strt = false){\n        if(this.state.key == \"\"){\n            this.setState({key:this.state.text}, this.setState({text:\"\"}));\n            return;\n        }\n        const times = strt ? [(new Date().getTime())] : []\n        const payload = this.processText();\n        var task = { \n            \"name\": payload.text,\n            \"tags\": payload.tags,\n            \"times\":times,\n            \"started\":strt,\n            \"done\":false,\n            \"delays\": 0,\n            \"raw\": payload.raw\n        };\n        if(\"est_high\" in payload){\n            task[\"est_high\"] = parseFloat(payload.est_high);\n        }\n        if(\"est_low\" in payload){\n            task[\"est_low\"] = parseFloat(payload.est_low);\n        }\n        var all = this.state.tasks;\n        \n        const len = task.tags.length;\n        for(var j = 0; j < len; j++){\n            if(this.state.current_tag === task.tags[j].name){\n                all.push(task);\n            }\n        }\n        this.setState({tasks:all});\n        this.commitAndClear(task);\n    }\n    textChanged(newText){\n        this.setState({text:newText});\n    }\n    createTag(tag){\n    }\n    setCurrentPerson(index){\n    }\n    setCurrentTag(tag){\n        this.setState({current_tag:tag}, () => {\n            this.getTasks(); this.setState({showing: \"tasks\"});\n        });\n    }\n    addTagToCurrent(index){\n    }\n    complete(i){\n        var tasks = this.state.tasks.slice();\n        tasks[i].done = !tasks[i].done;\n        if(tasks[i].started){\n            tasks[i].started = !tasks[i].started;\n            tasks[i].times.push(new Date().getTime());\n        }   \n        this.setState({tasks:tasks});\n        this.update(tasks[i]);\n        const len = tasks[i].tags.length;\n        for(var j = 0; j < len; j++){\n            const t = tasks[i].tags[j];\n            if(t.name === \"repeat\"){\n                this.setState({text: tasks[i].raw},() => {this.addTask()});\n            }}\n    }\n    postpone(i){\n        var tasks = this.state.tasks.slice();\n        var tags = tasks[i].tags;\n        var reschedule = \"unassign\";\n        var remove_tag = -1;\n        for( var j = 0; j < tags.length; j++){ \n            if (tags[j].name === this.today()) {\n              remove_tag = j;\n            } else if(tags[j].name.startsWith(\"default_\")){\n              reschedule = tags[j].name.substring(8);\n            }\n        }\n        tasks[i].delays = tasks[i].delays+1;\n        if(this.state.text.startsWith(\"#\")){\n            var new_tag = this.state.text.replace(\"#\",\"\").toLowerCase();\n            if(this.state.text === \"#today\"){ new_tag = this.today()}\n            else if (this.state.text === \"#tomorrow\"){ new_tag = this.tomorrow()}\n            tags.push({name:new_tag, order:0});\n        } else{\n            if(reschedule === \"unassign\"){\n              alert(\"No time provided! Date was unassigned\");\n            } else if(reschedule === \"next\"){\n              for(j = 0; j < tags.length; j++){\n                const tmp = tags[j].name;\n                if(tags[j].name === this.today()){\n                  tags[j].name = \"tomorrow\";\n                }\n                tags[j].name = this.replaceTag(tags[j].name);\n                if(!(tags[j].name === tmp)){\n                    tags[j].order = 0;\n                }\n              }\n            } else if(reschedule === \"tomorrow\"){\n              tags.push({name:this.replaceTag(\"tomorrow\"), order:0});\n            }\n        }\n        if(remove_tag > -1){\n          tags.splice(remove_tag, 1);\n        }\n        tasks[i].tags = tags;\n        this.update(tasks[i]);\n        tasks.splice(i,1);\n        this.setState({tasks:tasks});\n    }\n    start(i){\n        const tasks = this.state.tasks.slice();\n        tasks[i].started = !tasks[i].started;\n        tasks[i].times.push(new Date().getTime());\n        if(tasks[i].done){\n            tasks[i].done = false;\n        }\n        var today_task = false;\n        const len = tasks[i].tags.length;\n        for(var j = 0; j < len; j++){\n            const t = tasks[i].tags[j];\n            if(t.name === this.today()){\n                today_task = true;\n                const len = this.state.tasks.length;\n                tasks[i].tags[j].order = len - 1;\n            }\n            if(t.name === this.state.current_tag){\n                const len = this.state.tasks.length;\n                tasks[i].tags[j].order = len - 1;\n            }\n        }\n        if(!today_task){\n            tasks[i].tags.push({name: this.today(), order: 0});\n        }\n        this.setState({tasks:tasks});\n        this.update(tasks[i]);\n    }\n    delete_task(i){\n        const tasks = this.state.tasks.slice();\n        axios.delete('https://api.ibreznik.com/task', {params: {id: tasks[i][\"_id\"][\"$oid\"]}}).then(response => this.sync());    \n    }\n    taskSelected(i){\n        const tasks = this.state.tasks.slice();\n        this.setState({editing:tasks[i][\"_id\"][\"$oid\"]},this.setState({text:tasks[i][\"raw\"]}));\n    }\n    getLatestTag(){\n    }\n    onSortEnd = ({oldIndex, newIndex}) => {\n        this.setState({\n            tasks: arrayMove(this.state.tasks, oldIndex, newIndex),\n        }, () => {this.reorder()});\n    }\n\n    render(){\n        const showing = this.state.showing;\n        const latest_type = this.state.latest_type;\n        const tag = this.getLatestTag();\n        const edit = this.state.edit;\n        var low = 0;\n        var high = 0;\n        for(const t in this.state.tasks){\n          if(!this.state.tasks[t].done){\n          for(const key in this.state.tasks[t]){\n\t    const all_times = this.state.tasks[t][\"times\"];\n            var flip = -1;\n            var total_spent = 0;\n            for(const tm in all_times){\n              total_spent = total_spent+flip*all_times[tm];\n              flip = 1;\n            }\n\t    if(total_spent < 0){\n\t\ttotal_spent = total_spent+(new Date().getTime());\n            }\n            if(key === \"est_low\"){\n              low = Math.max(low + this.state.tasks[t][key] - total_spent/1000/60, 0);\n            } else if(key === \"est_high\"){\n              high = Math.max(high + this.state.tasks[t][key] - total_spent/1000/60, 0);\n            }\n          }\n          }\n        }\n        const tag_display = this.state.current_tag + \" (\"+(low/60).toFixed(2)+\"-\"+(high/60).toFixed(2)+\")\";\n        var show = \"\";\n        if(showing === \"tasks\"){\n            show = this.state.tasks.map((tsk, index) => \n                (<Task \n                    name={tsk.name} \n                    id={tsk._id} \n                    started={tsk.started} \n                    done={tsk.done} \n                    tags={tsk.tags}\n                    onStart={() => this.start(index)}\n                    onDelete={() => this.delete_task(index)}\n                    taskSelected={() => this.taskSelected(index)}\n                    onComplete={() => this.complete(index)}\n                    onPostpone={() => this.postpone(index)}\n                    edit={edit}\n                />));\n        } else if(showing === \"guess\"){\n            show = this.state.possible_tags.map((tg, index) => \n                (<Tag \n                    name={tg} \n                    onClick={() => this.addTagToCurrent(index)}\n                />));\n        } else if(showing === \"tags\"){\n            console.log(this.state.possible_tags);\n            if(latest_type === \"tag\"){\n                show = this.state.possible_tags.map((tg, index) => \n                (<Tag \n                    name={tg} \n                    onClick={() => this.setCurrentTag(tg)}\n                />));\n            } else if (latest_type === \"user\"){\n                show = this.state.friends.map((tg, index) => \n                (<Person \n                    name={tg} \n                    onClick={() => this.setCurrentPerson(index)}\n                />));\n                \n            }\n        }\n\n        var control = \"\";\n        if(showing === \"guess\"){\n            if(latest_type === \"tag\" ){\n                control = (<div className=\"createNewTag\" onClick={() => this.createTag(tag)}>\"Create new tag \"+tag</div>)\n            } else if(latest_type === \"user\"){\n                control =(<AddFriend onDone={this.addFriend} />)\n            }\n        } else{\n            control = (<div className=\"controls\">\n                    <div className= \"rightControl\" onClick={() => this.setState({edit: !this.state.edit})}>Edit</div>\n                    <div className= \"leftControl\" onClick={this.sync} >Sync</div>\n                    <center>\n                {(showing === \"tasks\") ?\n                           (<div className= \"centerControl\" onClick={() => this.show(\"tags\")}> {tag_display} </div>) :\n                           (<div className= \"centerControl\" onClick={() => this.setCurrentTag(\"\")}> Show all</div>)\n                        }\n                    </center>\n                </div>)}\n        return(\n            <div className=\"main\">\n                <div className=\"top\">\n                    <img className=\"add\"\n                        src = {add_icon}\n                        alt = \"Add\"\n                        height = \"35\"\n                        onClick={() => this.addTask(false)}\n                    />\n                    <img className=\"addAndStart\"\n                        src = {start_icon}\n                        alt = \"Start\"\n                        height = \"35\"\n                        onClick={() => this.addTask(true)}\n                    />\n                    <center><TextInput \n                        text={this.state.text} \n                        done={this.addTask}\n                        onChange={this.textChanged}\n                    /></center>\n                </div>\n                {control}\n                <div className=\"body\">\n                    <SortableList items= {show} distance={ 2 } onSortEnd={this.onSortEnd} />\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport{Route, HashRouter} from \"react-router-dom\"\nimport Home from \"./home.js\"\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <HashRouter>\n        <Route exact path=\"/\" render={(props) => <Home />} />\n        </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}